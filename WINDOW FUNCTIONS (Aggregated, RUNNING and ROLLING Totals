SUM(), COUNT(), AVG(), MIN(), and MAX(); FIRST_VALUE(), LAST_VALUE()
WINDOW FUNCTION without PARTITION calculated #rows w/in entire dataset, therefore not running totals.


Rolling Average for consecutive 3 days
---------------------------------------
Example1 Tweets' Rolling Averages:
ANSWER 1:
SELECT
  user_id,
  tweet_date,
  ROUND(AVG(tweet_count) OVER(PARTITION BY user_id ORDER BY tweet_date
    ROWS BETWEEN 2 PRECEDING AND CURRENT ROW),2) AS rolling_avg_3d
FROM tweets
------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------


FIRST_VALUE(), MIN(), RANK()
-----------------------------------------------------
Example2 Numbers of credit card issued at launch year and month: 

ANSWER 1 FIRST_VALUE() or MIN():
SELECT DISTINCT
  card_name, 
  FIRST_VALUE(issued_amount) OVER(PARTITION BY card_name ORDER BY issue_year, issue_month) 
  AS issued_amount
FROM monthly_cards_issued 
ORDER BY issued_amount DESC


ANSWER 2 - RANK():
WITH rank_cards AS
(SELECT
  card_name,
  issued_amount,
  RANK() OVER(PARTITION BY card_name ORDER BY issue_year, issue_month) AS ranker
FROM monthly_cards_issued)

SELECT
  card_name,
  issued_amount
FROM rank_cards
WHERE ranker = 1
ORDER BY issued_amount DESC;
